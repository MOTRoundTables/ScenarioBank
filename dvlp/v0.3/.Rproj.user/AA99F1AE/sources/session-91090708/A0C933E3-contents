
  ui <- fluidPage(
    waiter::use_waitress(),
    numericInput("steps", "How many steps?", 10),
    actionButton("go", "go"),
    textOutput("result")
  )

  # Create a new progress bar
  #  waitress <- waiter::Waitress$new(max = input$steps)
  # Automatically close it when done
  # on.exit(waitress$close())
  # 
  # for (i in seq_len(input$steps)) {
  #   Sys.sleep(0.5)
  #   # increment one step
  #   waitress$inc(1)
  # }
  
    server <- function(input, output, session) {
      data <- eventReactive(input$go, {
        waitress <- waiter::Waitress$new(max = input$steps)
        on.exit(waitress$close())
        
        for (i in seq_len(input$steps)) {
          Sys.sleep(0.5)
          waitress$inc(1)
        }
        
        runif(1)
      })
      
      output$result <- renderText(round(data(), 2))
    }
    
    shinyApp(ui = ui, server = server)    
    
  # The default display is a thin progress bar at the top of the page (which you can see https://hadley.shinyapps.io/ms-waiter), but there are a number of ways to customise the output:
  #   
  #   You can override the default theme to use one of:
  #   
  # overlay: an opaque progress bar that hides the whole page
  # overlay-opacity: a translucent progress bar that covers the whole page
  # overlay-percent: an opaque progress bar that also displays a numeric percentage.
  # Instead of showing a progress bar for the entire page, you can overlay it on an existing 
  #  input or output by setting the selector parameter, e.g.:
  #   
  #   waitress <- Waitress$new(selector = "#steps", theme = "overlay")
    
    
  
    
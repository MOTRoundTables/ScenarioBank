shiny::runApp()
shiny::runApp()
runApp()
runApp('C:/Users/marsz/OneDrive/temp/shiny/learn/ui/conditionalpanel.R')
runApp('C:/Users/marsz/OneDrive/temp/shiny/learn/ui/conditionalpanel.R')
runApp('C:/Users/marsz/OneDrive/temp/shiny/learn/ui/conditionalpanel.R')
runApp('C:/Users/marsz/OneDrive/temp/shiny/learn/ui/conditionalpanel.R')
runApp('C:/Users/marsz/OneDrive/temp/shiny/learn/ui/conditionalpanel.R')
runApp('C:/Users/marsz/OneDrive/temp/shiny/learn/ui/conditionalpanel.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(currentfrcst)
x = [2020, 2017, 2020, 2040]
x = vector()
x = [2020, 2017, 2020, 2040]
x = c(2020, 2017, 2020, 2040)
mode(x)
y = unique(x)
y
y = sort(unique(x))
y
rm(x)
rm(y)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Q
View(analisystype)
View(currentfrcst)
z = currentfrcst$getscnyears()
View(currentfrcst)
currentfrcst$getscnyears()
self.scnlist
self
scnlist
self.scnlist
runApp()
runApp()
input$selectscn
runApp()
View(userreq)
runApp()
View(userreq)
runApp()
View(userreq)
scn
userreq$scn
userreq$scn[1]
userreq$scn[[1]]
runApp()
runApp()
